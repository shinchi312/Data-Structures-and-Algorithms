Question : Given an array arr of N integers and an integer K, find the number of subsets of arr having XOR of elements as K.

perform : subset dp over all the value of xor  dp[i][j] defines number of subset till a[0....i-1] which have j as xor value

soln : 
// { Driver Code Starts

#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends

class Solution{
public:
    int subsetXOR(vector<int> arr, int N, int k) {
        int b = INT_MIN;
        for(auto u : arr) b = max(b,u);
        int m = (1<<(__lg(b)+1))-1;
        if(k>m)return 0;
        vector<vector<int>>dp(N+1,vector<int>(m+1));
        dp[0][0] = 1;
        for(int i = 1;i<=N;i++){
            for(int j = 0;j<=m;j++){
                dp[i][j] = dp[i-1][j]+dp[i-1][j^arr[i-1]];
            }
        }
        return dp[N][k];
    }
};

// { Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        int N;
        cin>>N;
        int K;
        cin>>K;
        vector<int> v;
        for(int i = 0;i<N;i++)
        {
            int x;
            cin>>x;
            v.push_back(x);
        }    
        Solution ob;
        cout << ob.subsetXOR(v,N,K) << endl;
    }
    return 0; 
}  // } Driver Code Ends
